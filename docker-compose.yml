version: "3.7"
services:
    # imagem micro 01
    micro_auth:
        build:
            args:
                user: user
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        container_name: micro_auth
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis_auth
            - queue_auth
        networks:
            - microauth
        environment:
            - PHP_IDE_CONFIG=serverName=XdebugServer
        extra_hosts:
            - "host.docker.internal:host-gateway"

    # nginx
    nginx_auth:
        container_name: nginx_auth
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8090:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - microauth

    # mysql micro 01
    mysql_auth:
        container_name: mysql_auth
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        networks:
            - microauth

    # queue micro 01
    queue_auth:
        container_name: queue_auth
        build:
            args:
                user: use
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./:/var/www
        depends_on:
            - redis_auth
        networks:
            - microauth

    #redis
    redis_auth:
        container_name: redis_auth
        image: redis:latest
        networks:
            - microauth

networks:
    microauth:
        driver: bridge
